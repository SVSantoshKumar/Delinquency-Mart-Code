	SELECT 
		TRIM(cd.LOAN_NO),
		TRIM(cd.LOAN_BRANCH),
		TRIM(cd.SCHEME),
		TRIM(lad.CUST_ID_FLEX),
		CASE WHEN COUNT(TRIM(cd.LOAN_NO)) = 1 THEN 1 ELSE 0 END AS UNIQUE_CUSTOMER,
		CASE 
		  WHEN MAX(cd.DPD) = 0 THEN 'a:0-0'
		  WHEN MAX(cd.DPD) >= 1 AND MAX(cd.DPD) <= 30 THEN 'b:1-30'
		  WHEN MAX(cd.DPD) >= 31 AND MAX(cd.DPD) <= 60 THEN 'c:31-60'
		  WHEN MAX(cd.DPD) >= 61 AND MAX(cd.DPD) <= 90 THEN 'd:61-90'
		  WHEN MAX(cd.DPD) >= 91 AND MAX(cd.DPD) <= 120 THEN 'e:91-120'
		  WHEN MAX(cd.DPD) >= 121 AND MAX(cd.DPD) <= 180 THEN 'f:121-180'
		  WHEN MAX(cd.DPD) > 180 THEN 'g>180'
		END AS UNIQUE_CUSTOMER_FLAG_BUCKET,
		TRIM(cd.TOTAL_NO_OF_INSTL),
		TRIM(cd.MORATORIUM),
		TRIM(cd.TOTAL_BILLED_INSTL_NO),
		TRIM(cd.TOTAL_RECEIV_INSTL),
		(cd.TOTAL_NO_OF_INSTL - cd.TOTAL_BILLED_INSTL_NO) AS REMAINING_TENURE,
		cd.OVERDUE_INSTL_COUNT,
		cd.OVERDUE_PRE_EMI_COUNT,
		CASE 
		WHEN 
		rd.INSTRUMENTMODE IN ('ECS','NACH','MNACH','MECS','ICHQ')
		AND rd.RECEIPTSTATUS = 'Bounced' AND EXTRACT(DAY FROM TO_DATE(rd.INSTRUMENTDATE,'YYYY-MM-DD')) IN (05,06,07,08,09,10,11,12,15,16,17)
		AND EXTRACT(DAY FROM TO_DATE(rd.MAKERDATE,'YYYY-MM-DD')) IN (05,06,08,09,10,12,15,16,17)
		AND EXTRACT(DAY FROM TO_DATE(rd.AUTHORDATE,'YYYY-MM-DD')) IN (05,06,07,08,09,10,11,12,13,14,15,16,17,18)
		AND rd.BOUNCINGREASON NOT LIKE '%SECOND BOUNCE%'
		AND rd.ALLOCATEDTO IN ('EMI AMOUNT','ADVANCE AMOUNT') THEN 'BOUNCE'
		WHEN rd.INSTRUMENTMODE IN ('ECS','NACH','MNACH','MECS','ICHQ')  AND rd.RECEIPTSTATUS = 'Realized'
		AND EXTRACT(DAY FROM TO_DATE(rd.INSTRUMENTDATE,'YYYY-MM-DD')) IN (05,06,07,08,09,10,11,12,15,16,17)
		AND EXTRACT(DAY FROM TO_DATE(rd.MAKERDATE,'YYYY-MM-DD')) IN (05,08,09,10,12,15,16,17)
		--AND rd.BOUNCINGREASON NOT IN ('FUND INSUFFICIENT (SECOND BOUNCE)')
		AND rd.ALLOCATEDTO IN ('EMI AMOUNT','ADVANCE AMOUNT')
		AND rd.INSTRUMENTDATE=rd.MAKERDATE  THEN 'PASS'
		ELSE 'PENDING' END AS GROSS,	
		rd.ALLOCATEDAMOUNT,
		cd.TOTAL_DUE,
		cd.LPP,
		cd.PRE_EMI,
		cd.CBC_DUE,
		cd.OTHER_CHARGES_DUE,
		(cd.LPP + cd.PRE_EMI + cd.CBC_DUE + cd.OTHER_CHARGES_DUE) AS PENAL_AMOUNT_OUTSTANDING,
		CASE 
		WHEN laad.FLG_ACCR_STATUS = 'S' then 'NPA'
		ELSE 'NORMAL' end as NPA_LOAN,
		cd.TOTAL_POS,
		(cd.TOTAL_POS/10000000) AS CR,
		cd.DPD,
		ld.OP_DPD AS OP_DPD,
		march_dpd.MARCH_XX_DPD,
		CASE 
		  WHEN ld.OP_DPD = 0 THEN 'a:0-0'
		  WHEN ld.OP_DPD >= 1 AND ld.OP_DPD <= 30 THEN 'b:1-30'
		  WHEN ld.OP_DPD >= 31 AND ld.OP_DPD <= 60 THEN 'c:31-60'
		  WHEN ld.OP_DPD >= 61 AND ld.OP_DPD <= 90 THEN 'd:61-90'
		  WHEN ld.OP_DPD >= 91 AND ld.OP_DPD <= 120 THEN 'e:61-90'
		  WHEN ld.OP_DPD >= 121 AND ld.OP_DPD <= 180 THEN 'f:91-120'
		  WHEN ld.OP_DPD > 180 THEN 'g:180'
		END AS COLLX_BKT,
		NULL AS BUCKET_HEAD,
		CASE 
		  WHEN ld.OP_DPD != 0 THEN 'Opening Allocation'
		  WHEN ld.OP_DPD = 0 AND DAY(cd.LAST_EMI_DATE) = 5 THEN '5th Cycle'
		  WHEN ld.OP_DPD = 0 AND DAY(cd.LAST_EMI_DATE) = 10 THEN '10th Cycle'
		  WHEN ld.OP_DPD = 0 AND DAY(cd.LAST_EMI_DATE) = 15 THEN '15th Cycle'
		  ELSE 'NA'
		END AS Cycle,
		CASE 
		  WHEN ld.OP_DPD = 0 THEN 'a:0-0'
		  WHEN ld.OP_DPD >= 1 AND ld.OP_DPD <= 30 THEN 'b:1-30'
		  WHEN ld.OP_DPD >= 31 AND ld.OP_DPD <= 60 THEN 'c:31-60'
		  WHEN ld.OP_DPD >= 61 AND ld.OP_DPD <= 90 THEN 'd:61-90'
		  WHEN ld.OP_DPD >= 91 AND ld.OP_DPD <= 120 THEN 'e:61-90'
		  WHEN ld.OP_DPD >= 121 AND ld.OP_DPD <= 180 THEN 'f:91-120'
		  WHEN ld.OP_DPD > 180 THEN 'g:180'
		END AS CURRENT_DPD_SCALE,
		NULL AS OP_DPD_SCALE,  --- to be written
		CASE 
		  WHEN ld.OP_DPD >= 91 AND cd.DPD < 91 AND cd.DPD > 0 THEN 'RTD'
		  WHEN cd.DPD = 0 THEN 'NORMAL'
		  WHEN cd.DPD = ld.OP_DPD THEN 'STABLE'
		  WHEN cd.DPD < ld.OP_DPD THEN 'ROLLBACK'
		  ELSE 'ROLLFORWARD'
		END AS CURRENT_STATUS,
		CASE WHEN CURRENT_STATUS = 'ROLLFORWARD' and CHEQUE_IN_TRANSIT_COUNT <> 0 then 'Cheque in transit'
		ELSE CURRENT_STATUS END as STATUS,
		CASE WHEN STATUS IN ('ROLLFORWARD','Cheque in transit') then 'Unpaid'
		ELSE 'Paid' END AS PAID_STATUS,
		CASE WHEN cd_yest.PAID_STATUS = 'Unpaid' and cd.PAID_STATUS = 'Paid' then 'Yes'
		ELSE '' END AS YESTERDAY_MOVEMENT,
		CASE WHEN (ld.OP_DPD >= 91 AND cd.DPD > ld.OP_DPD) THEN 'YES' ELSE '' END AS RF_CASES,
		cd.EXTRACTED_DATE,
		DATEADD(DAY,-1,cd.EXTRACTED_DATE) AS BUSINESS_DATE,
		cd.CURRENT_MONTH_INSTLA,
		cd.CURRENT_MONTH_INSTLAMENT_DUE_DATE,
		cd.LOAN_AMOUNT,
		cd.LAST_RECEIVED_DATE_KNOCKOFF_DATE,
		cd.LAST_RECEIPT_AMOUNT,
		cd.FIRST_EMI_DATE,
		cd.LAST_EMI_DATE,
		CASE 
		  WHEN DAY(cd.LAST_EMI_DATE) = 5 THEN 5 
		  WHEN DAY(cd.LAST_EMI_DATE) = 10 THEN 10 
		  WHEN DAY(cd.LAST_EMI_DATE) = 15 THEN 15 
		END AS CYCLE_DATE,
		CASE 
		WHEN laae.POOL_NAME IS NULL then 'ON-BOOK'
		WHEN laae.POOL_NAME like '%PTC%' then 'PTC'
		ELSE 'OFF-BOOK' 
		END AS ON_OFF_BOOK,
		NULL AS REPO_FLAG, -- take from duelist
		cd.OVERDUE_PRIN,
		cd.OVERDUE_INTEREST,
		'EPI' AS EMI_PATTERN,
		cd.BOOKING_DATE,
		cd.CHEQUE_IN_TRANSIT_AMT,
		cd.CHEQUE_IN_TRANSIT_COUNT,
		bhcax.AMT_COLL_VALUE,
		cd.DISBURSAL_STATUS,
		cd.LOAN_STATUS,
		cd.LOAN_PRODUCT,
		cd.LOAN_EFF_RATE,
		CASE WHEN cd.DISBURSAL_STATUS = 'FULLY DISBURSED' THEN 'EMI' ELSE 'PEMI' END AS EMI_PEMI,    
		NULL AS INSTALLMENT_MODE, --- TBC. To check with Sai
		lad.LOAN_SANCTION_DATE,
		lad.LAST_DISBURSAL_DATE,
		MAX(cd.TOTAL_NO_OF_INSTL - cd.TOTAL_BILLED_INSTL_NO) AS NET_LTV,
		NULL AS NPA_STAGEID, --- can be found from collection legal NPA Stages
		cd.EMI_FREQUENCY,
		(cd.TOTAL_DUE + cd.PRE_EMI) AS EMI_OVERDUE_AMOUNT,
		NULL AS ROID,
		NULL AS RO_NAME,
		NULL AS BOM_BKT_LM, --- OP DPD 
		NULL AS ALLOCATION_LLM, -- redundant
		NULL AS ALLOCATION, --
		NULL AS ALLOCATION_DATE,
		NULL AS DAY1_ALLOCATION, 
		NULL AS ALLOCATION_CHANNEL,
		NULL AS AGENCY_CODE,
		NULL AS NPA_STAGEID_NEW -- redundant
	FROM DISHA_L2_CURATED.BASE_HARDCODE.COLL_DUELIST cd
	LEFT JOIN DISHA_L2_CURATED.BASE_MODEL_DATA.LOAN_ACCOUNT_DETAILS lad ON cd.LOAN_NO = trim(lad.LOAN_NO)
	LEFT JOIN (
		SELECT 
			LOAN_NO,
			EXTRACT(YEAR FROM EXTRACTED_DATE) AS DPD_YEAR,
			DPD AS MARCH_XX_DPD
		FROM DISHA_L2_CURATED.BASE_HARDCODE.COLL_DUELIST
		WHERE EXTRACTED_DATE = TO_DATE(TO_CHAR(EXTRACT(YEAR FROM EXTRACTED_DATE) || '-03-31'))
	) march_dpd
	ON cd.LOAN_NO = march_dpd.LOAN_NO AND EXTRACT(YEAR FROM cd.EXTRACTED_DATE) = march_dpd.DPD_YEAR
	LEFT JOIN (
		SELECT LOAN_NO,
			   LAST_DAY(EXTRACTED_DATE) AS month_end,
			   FIRST_VALUE(DPD) OVER (
				   PARTITION BY LOAN_NO, YEAR(EXTRACTED_DATE), MONTH(EXTRACTED_DATE)
				   ORDER BY EXTRACTED_DATE DESC
			   ) AS OP_DPD
		FROM DISHA_L2_CURATED.BASE_HARDCODE.COLL_DUELIST
	) ld ON cd.LOAN_NO = ld.LOAN_NO
	LEFT JOIN DISHA_L2_CURATED.BASE_HARDCODE.COLL_DUELIST cd_yest
	  ON cd.LOAN_NO = cd_yest.LOAN_NO
	  AND TO_DATE(cd.EXTRACTED_DATE, 'YYYY-MM-DD') = DATEADD(DAY, 1, TO_DATE(cd_yest.EXTRACTED_DATE, 'YYYY-MM-DD'))
	LEFT JOIN DISHA_L1_HARMONIZED.FLEX_LMS.LN_ACCT_ATTRIBUTES_EXT laae ON cd.LOAN_NO = trim(laae.COD_ACCT_NO)
	LEFT JOIN DISHA_L1_HARMONIZED.FLEX_LMS.LN_ACCT_DTLS laad ON cd.LOAN_NO = trim(laad.cod_acct_no)
	LEFT JOIN DISHA_L1_HARMONIZED.FLEX_LMS.BA_HO_COLL_ACCT_XREF bhcax ON cd.LOAN_NO = trim(bhcax.COD_ACCT_NO)
	LEFT JOIN (select * from (select *, row_number() over (partition by loanno, EXTRACTED_DATE order by TO_DATE(AUTHORDATE, 'YYYY-MM-DD') ASC ) AS rn from  
	DISHA_L2_CURATED.BASE_HARDCODE.RECIEPTDUMP_REPAYMENT ) rd_sub where rn = 1 ) rd ON cd.loan_no = trim(rd.LOANNO) AND cd.EXTRACTED_DATE = rd.EXTRACTED_DATE
	--LEFT JOIN DISHA_L1_HARMONIZED.FLEX_LMS.LN_X_REPAY_REGISTER lxrr ON cd.LOAN_NO = trim(lxrr.COD_ACCT_NO)
	--WHERE cd.DPD > 0 AND ld.OP_DPD != 0
	GROUP BY 
		TRIM(cd.LOAN_NO), TRIM(cd.LOAN_BRANCH), TRIM(cd.SCHEME), TRIM(lad.CUST_ID_FLEX),
		cd.TOTAL_NO_OF_INSTL, cd.MORATORIUM, cd.TOTAL_BILLED_INSTL_NO, cd.TOTAL_RECEIV_INSTL,
		cd.OVERDUE_INSTL_COUNT, cd.OVERDUE_PRE_EMI_COUNT, cd.TOTAL_DUE, cd.LPP, cd.PRE_EMI,rd.ALLOCATEDAMOUNT,
		cd.CBC_DUE, cd.OTHER_CHARGES_DUE,laad.FLG_ACCR_STATUS, cd.TOTAL_POS, cd.DPD, ld.OP_DPD,
		cd.CURRENT_MONTH_INSTLA, cd.CURRENT_MONTH_INSTLAMENT_DUE_DATE,
		cd.LOAN_AMOUNT, cd.LAST_RECEIVED_DATE_KNOCKOFF_DATE, cd.LAST_RECEIPT_AMOUNT,
		cd.FIRST_EMI_DATE, cd.LAST_EMI_DATE, laae.POOL_NAME,cd.OVERDUE_PRIN, cd.OVERDUE_INTEREST,
		cd.BOOKING_DATE, cd.CHEQUE_IN_TRANSIT_AMT, cd.CHEQUE_IN_TRANSIT_COUNT, bhcax.AMT_COLL_VALUE,
		cd.DISBURSAL_STATUS, cd.LOAN_STATUS, cd.LOAN_PRODUCT, cd.LOAN_EFF_RATE,
		rd.INSTRUMENTMODE,rd.RECEIPTSTATUS,rd.MAKERDATE,rd.AUTHORDATE,rd.INSTRUMENTDATE,rd.BOUNCINGREASON,rd.ALLOCATEDTO,
		--lxrr.COD_REPAY_MODE,
		cd.EXTRACTED_DATE, lad.LOAN_SANCTION_DATE, lad.LAST_DISBURSAL_DATE,
		cd.EMI_FREQUENCY 
