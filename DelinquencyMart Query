SELECT 
    TRIM(cd.LOAN_NO),
    TRIM(cd.LOAN_BRANCH),
    TRIM(cd.SCHEME),
    TRIM(crf.CUST_ID_FLEX),
    CASE WHEN COUNT(TRIM(cd.LOAN_NO)) = 1 THEN 1 ELSE 0 END AS UNIQUE_CUSTOMER,
    CASE 
      WHEN MAX(cd.DPD) = 0 THEN 'a:0-0'
      WHEN MAX(cd.DPD) >= 1 AND MAX(cd.DPD) <= 30 THEN 'b:1-30'
      WHEN MAX(cd.DPD) >= 31 AND MAX(cd.DPD) <= 60 THEN 'c:31-60'
      WHEN MAX(cd.DPD) >= 61 AND MAX(cd.DPD) <= 90 THEN 'd:61-90'
      WHEN MAX(cd.DPD) >= 91 AND MAX(cd.DPD) <= 120 THEN 'e:91-120'
      WHEN MAX(cd.DPD) >= 121 AND MAX(cd.DPD) <= 180 THEN 'f:121-180'
      WHEN MAX(cd.DPD) > 180 THEN 'g>180'
    END AS UNIQUE_CUSTOMER_FLAG_BUCKET,
    TRIM(cd.TOTAL_NO_OF_INSTL),
    TRIM(cd.MORATORIUM),
    TRIM(cd.TOTAL_BILLED_INSTL_NO),
    TRIM(cd.TOTAL_RECEIV_INSTL),
    (cd.TOTAL_NO_OF_INSTL - cd.TOTAL_BILLED_INSTL_NO) AS REMAINING_TENURE,
    cd.OVERDUE_INSTL_COUNT,
    cd.OVERDUE_PRE_EMI_COUNT,
    cd.TOTAL_DUE,
    cd.LPP,
    cd.PRE_EMI,
    cd.CBC_DUE,
    cd.OTHER_CHARGES_DUE,
    (cd.LPP + cd.PRE_EMI + cd.CBC_DUE + cd.OTHER_CHARGES_DUE) AS PENAL_AMOUNT_OUTSTANDING,
    cd.TOTAL_POS,
    (cd.TOTAL_POS/10000000) AS CR,
    cd.DPD,
    ld.OP_DPD AS OP_DPD,
    CASE 
      WHEN ld.OP_DPD = 0 THEN 'a:0-0'
      WHEN ld.OP_DPD >= 1 AND ld.OP_DPD <= 30 THEN 'b:1-30'
      WHEN ld.OP_DPD >= 31 AND ld.OP_DPD <= 60 THEN 'c:31-60'
      WHEN ld.OP_DPD >= 61 AND ld.OP_DPD <= 90 THEN 'd:61-90'
      WHEN ld.OP_DPD >= 91 AND ld.OP_DPD <= 120 THEN 'e:61-90'
      WHEN ld.OP_DPD >= 121 AND ld.OP_DPD <= 180 THEN 'f:91-120'
      WHEN ld.OP_DPD > 180 THEN 'g:180'
    END AS COLLX_BKT,
    NULL AS BUCKET_HEAD,
    CASE 
      WHEN ld.OP_DPD != 0 THEN 'Opening Allocation'
      WHEN ld.OP_DPD = 0 AND DAY(cd.LAST_EMI_DATE) = 5 THEN '5th Cycle'
      WHEN ld.OP_DPD = 0 AND DAY(cd.LAST_EMI_DATE) = 10 THEN '10th Cycle'
      WHEN ld.OP_DPD = 0 AND DAY(cd.LAST_EMI_DATE) = 15 THEN '15th Cycle'
      ELSE 'NA'
    END AS Cycle,
    CASE 
      WHEN ld.OP_DPD = 0 THEN 'a:0-0'
      WHEN ld.OP_DPD >= 1 AND ld.OP_DPD <= 30 THEN 'b:1-30'
      WHEN ld.OP_DPD >= 31 AND ld.OP_DPD <= 60 THEN 'c:31-60'
      WHEN ld.OP_DPD >= 61 AND ld.OP_DPD <= 90 THEN 'd:61-90'
      WHEN ld.OP_DPD >= 91 AND ld.OP_DPD <= 120 THEN 'e:61-90'
      WHEN ld.OP_DPD >= 121 AND ld.OP_DPD <= 180 THEN 'f:91-120'
      WHEN ld.OP_DPD > 180 THEN 'g:180'
    END AS CURRENT_DPD_SCALE,
    NULL AS OP_DPD_SCALE,
    CASE 
      WHEN ld.OP_DPD >= 91 AND cd.DPD < 91 AND cd.DPD > 0 THEN 'RTD'
      WHEN cd.DPD = 0 THEN 'NORMAL'
      WHEN cd.DPD = ld.OP_DPD THEN 'STABLE'
      WHEN cd.DPD < ld.OP_DPD THEN 'ROLLBACK'
      ELSE 'ROLLFORWARD'
    END AS CURRENT_STATUS,
    CASE WHEN (ld.OP_DPD >= 91 AND cd.DPD > ld.OP_DPD) THEN 'YES' ELSE '' END AS RF_CASES,
    cd.CURRENT_MONTH_INSTLA,
    cd.CURRENT_MONTH_INSTLAMENT_DUE_DATE,
    cd.LOAN_AMOUNT,
    cd.LAST_RECEIVED_DATE_KNOCKOFF_DATE,
    cd.LAST_RECEIPT_AMOUNT,
    cd.FIRST_EMI_DATE,
    cd.LAST_EMI_DATE,
    CASE 
      WHEN DAY(cd.LAST_EMI_DATE) = 5 THEN 5 
      WHEN DAY(cd.LAST_EMI_DATE) = 10 THEN 10 
      WHEN DAY(cd.LAST_EMI_DATE) = 15 THEN 15 
    END AS CYCLE_DATE,
    NULL AS REPO_FLAG,
    cd.OVERDUE_PRIN,
    cd.OVERDUE_INTEREST,
    'EPI' AS EMI_PATTERN,
    cd.BOOKING_DATE,
    cd.CHEQUE_IN_TRANSIT_AMT,
    cd.CHEQUE_IN_TRANSIT_COUNT,
    cd.DISBURSAL_STATUS,
    cd.LOAN_STATUS,
    cd.LOAN_PRODUCT,
    cd.LOAN_EFF_RATE,
    CASE WHEN cd.DISBURSAL_STATUS = 'FULLY DISBURSED' THEN 'EMI' ELSE 'PEMI' END AS EMI_PEMI,
    cd.EXTRACTED_DATE,
    DATEADD(DAY,-1,cd.EXTRACTED_DATE) AS BUSINESS_DATE,
    NULL AS INSTALLMENT_MODE,
    lam.LOAN_SANCTION_DATE,
    lam.LAST_DISBURSAL_DATE,
    MAX(cd.TOTAL_NO_OF_INSTL - cd.TOTAL_BILLED_INSTL_NO) AS NET_LTV,
    NULL AS NPA_STAGEID,
    cd.EMI_FREQUENCY,
    (cd.TOTAL_DUE + cd.PRE_EMI) AS EMI_OVERDUE_AMOUNT,
    NULL AS ROID,
    NULL AS RO_NAME,
    NULL AS NEXT_DUE_DATE,
    NULL AS BOM_BKT_LM,
    NULL AS ALLOCATION_LLM,
    NULL AS ALLOCATION,
    NULL AS ALLOCATION_DATE,
    NULL AS DAY1_ALLOCATION,
    NULL AS ALLOCATION_CHANNEL,
    NULL AS AGENCY_CODE,
    NULL AS NPA_STAGEID_NEW
FROM DISHA_L2_CURATED.BASE_HARDCODE.COLL_DUELIST cd
LEFT JOIN DISHA_L2_CURATED.BASE_HARDCODE.CUSTOMER_ROLE_FLEXCUBE crf ON cd.LOAN_NO = crf.LOAN_NO
LEFT JOIN (
    SELECT LOAN_NO,
           LAST_DAY(EXTRACTED_DATE) AS month_end,
           FIRST_VALUE(DPD) OVER (
               PARTITION BY LOAN_NO, YEAR(EXTRACTED_DATE), MONTH(EXTRACTED_DATE)
               ORDER BY EXTRACTED_DATE DESC
           ) AS OP_DPD
    FROM DISHA_L2_CURATED.BASE_HARDCODE.COLL_DUELIST
) ld ON cd.LOAN_NO = ld.LOAN_NO
LEFT JOIN DISHA_L2_CURATED.BASE_HARDCODE.LOAN_ACCOUNT_MART lam ON cd.LOAN_NO = lam.LOAN_ACCOUNT_NUMBER
WHERE cd.DPD > 0 AND ld.OP_DPD != 0
GROUP BY 
    TRIM(cd.LOAN_NO), TRIM(cd.LOAN_BRANCH), TRIM(cd.SCHEME), TRIM(crf.CUST_ID_FLEX),
    cd.TOTAL_NO_OF_INSTL, cd.MORATORIUM, cd.TOTAL_BILLED_INSTL_NO, cd.TOTAL_RECEIV_INSTL,
    cd.OVERDUE_INSTL_COUNT, cd.OVERDUE_PRE_EMI_COUNT, cd.TOTAL_DUE, cd.LPP, cd.PRE_EMI,
    cd.CBC_DUE, cd.OTHER_CHARGES_DUE, cd.TOTAL_POS, cd.DPD, ld.OP_DPD,
    cd.CURRENT_MONTH_INSTLA, cd.CURRENT_MONTH_INSTLAMENT_DUE_DATE,
    cd.LOAN_AMOUNT, cd.LAST_RECEIVED_DATE_KNOCKOFF_DATE, cd.LAST_RECEIPT_AMOUNT,
    cd.FIRST_EMI_DATE, cd.LAST_EMI_DATE, cd.OVERDUE_PRIN, cd.OVERDUE_INTEREST,
    cd.BOOKING_DATE, cd.CHEQUE_IN_TRANSIT_AMT, cd.CHEQUE_IN_TRANSIT_COUNT,
    cd.DISBURSAL_STATUS, cd.LOAN_STATUS, cd.LOAN_PRODUCT, cd.LOAN_EFF_RATE,
    cd.EXTRACTED_DATE, lam.LOAN_SANCTION_DATE, lam.LAST_DISBURSAL_DATE,
    cd.EMI_FREQUENCY
