Select 
	TRIM(cd.LOAN_NO),
	TRIM(cd.LOAN_BRANCH),
	TRIM(cd.SCHEME),
	TRIM(crf.CUST_ID_FLEX),
	CASE WHEN COUNT(TRIM(cd.LOAN_NO)) = 1 then 1
	ELSE 0 
	END AS UNIQUE_CUSTOMER, -- need to apply join and group by customerID
	case 
	  WHEN max(cd.dpd) = 0 then 'a:0-0'
	  WHEN max(cd.dpd) = 0 then 'a:0-0'
	  WHEN max(cd.dpd) >=1 and max(cd.dpd) <= 30 then 'b:1-30'
	  WHEN max(cd.dpd) >=31 and max(cd.dpd) <= 60 then 'c:31-60'
	  WHEN max(cd.dpd) >=61 and max(cd.dpd) <= 90 then 'd:61-90'
	  WHEN max(cd.dpd) >=91 and max(cd.dpd) <= 120 then 'e:91-120'
	  WHEN max(cd.dpd) >=121 and max(cd.dpd) <= 180 then 'f:121-180'
	  WHEN max(cd.dpd) > 180  then 'g>180'
	  END AS UNIQUE_CUSTOMER_FLAG_BUCKET,
	TRIM(cd.TOTAL_NO_OF_INSTL), -- Tenure months
	TRIM(cd.MORATORIUM),
	TRIM(cd.TOTAL_BILLED_INSTL_NO),
	TRIM(cd.TOTAL_RECEIV_INSTL),
	(cd.TOTAL_NO_OF_INSTL - cd.TOTAL_BILLED_INSTL_NO) AS REMAINING_TENURE,
	cd.OVERDUE_INSTL_COUNT,
	cd.OVERDUE_PRE_EMI_COUNT,
	cd.TOTAL_DUE,
	cd.LPP,
	cd.PRE_EMI,
	cd.CBC_DUE,
	cd.OTHER_CHARGES_DUE,
	(cd.LPP + cd.PRE_EMI + cd.CBC_DUE + cd.OTHER_CHARGES_DUE) AS PENAL_AMOUNT_OUTSTANDING,
	cd.TOTAL_POS,
	(cd.TOTAL_POS/10000000) AS CR,
	cd.DPD,
	ld.OP_DPD as OP_DPD,
	CASE 
	  WHEN OP_DPD = 0 then 'a:0-0'
	  WHEN OP_DPD >=1 and OP_DPD <= 30 then 'b:1-30'
	  WHEN OP_DPD >=31 and OP_DPD <= 60 then 'c:31-60'
	  WHEN OP_DPD >=61 and OP_DPD <= 90 then 'd:61-90'
	  WHEN OP_DPD >=91 and OP_DPD <= 120 then 'e:61-90'
	  WHEN OP_DPD >=121 and OP_DPD <= 180 then 'f:91-120'
	  WHEN OP_DPD > 180  then 'g:180'
	END  as COLLX_BKT,
	NULL AS BUCKET_HEAD,	
	CASE 
	WHEN OP_DPD !=0 then 'Opening Allocation' 
	WHEN OP_DPD = 0 and DAY(LAST_EMI_DATE)= 5 then '5th Cycle' 
	WHEN OP_DPD = 0 and DAY(LAST_EMI_DATE)= 10 then '10th Cycle' 
	WHEN OP_DPD = 0 and DAY(LAST_EMI_DATE)= 15 then '15th Cycle' 
	WHEN OP_DPD = 0 and DAY(LAST_EMI_DATE)= 15 then '15th Cycle' 
	ELSE 'NA' END AS Cycle,
	CASE 
	  WHEN op_dpd = 0 then 'a:0-0'
	  WHEN op_dpd >=1 and op_dpd <= 30 then 'b:1-30'
	  WHEN op_dpd >=31 and op_dpd <= 60 then 'c:31-60'
	  WHEN op_dpd >=61 and op_dpd <= 90 then 'd:61-90'
	  WHEN op_dpd >=91 and op_dpd <= 120 then 'e:61-90'
	  WHEN op_dpd >=121 and op_dpd <= 180 then 'f:91-120'
	  WHEN op_dpd > 180  then 'g:180'
	END  as CURRENT_DPD_SCALE,
	NULL as OP_DPD_SCALE,
	CASE 
	WHEN OP_DPD >= 91 and DPD < 91 and DPD > 0 THEN 'RTD' 
	WHEN cd.DPD = 0 THEN 'NORMAL' 
	WHEN cd.DPD = OP_DPD THEN 'STABLE'
	WHEN cd.DPD < OP_DPD THEN 'ROLLBACK'
	ELSE 'ROLLFORWARD'
	END AS CURRENT_STATUS, 
	CASE 
	WHEN CURRENT_STATUS = 'ROLLFORWARD' THEN 'YES'
	ELSE '' END AS RF_CASES,
	cd.CURRENT_MONTH_INSTLA, 
	cd.CURRENT_MONTH_INSTLAMENT_DUE_DATE, -- same are next month due date
	cd.LOAN_AMOUNT,
	cd.LAST_RECEIVED_DATE_KNOCKOFF_DATE,
	cd.LAST_RECEIPT_AMOUNT,
	cd.FIRST_EMI_DATE,
	cd.LAST_EMI_DATE,
	CASE 
	WHEN DAY(cd.LAST_EMI_DATE) = 5 then 5 
	WHEN DAY(cd.LAST_EMI_DATE) = 10 then 10 
	WHEN DAY(cd.LAST_EMI_DATE) = 15 then 15 
	END AS CYCLE_DATE,
	NULL AS REPO_FLAG,
	cd.OVERDUE_PRIN,
	cd.OVERDUE_INTEREST,
	'EPI' AS EMI_PATTERN,
	cd.BOOKING_DATE,
	cd.CHEQUE_IN_TRANSIT_AMT,
	cd.CHEQUE_IN_TRANSIT_COUNT,
	cd.DISBURSAL_STATUS,
	cd.LOAN_STATUS,
	cd.LOAN_PRODUCT,
	cd.LOAN_EFF_RATE,
	CASE WHEN DISBURSAL_STATUS = 'FULLY DISBURSED' THEN 'EMI'
	ELSE 'PEMI' END AS EMI_PEMI,
	cd.EXTRACTED_DATE,
    DATEADD(DAY,-1,cd.EXTRACTED_DATE) AS BUSINESS_DATE,
	NULL AS INSTALLMENT_MODE,
	lam.LOAN_SANCTION_DATE AS LOAN_SANCTION_DATE,
	lam.LAST_DISBURSAL_DATE AS LAST_DISBURSEMENT_DATE,	
	MAX(cd.TOTAL_NO_OF_INSTL - cd.TOTAL_BILLED_INSTL_NO) AS    NET_LTV,
	NULL AS NPA_STAGEID,
	cd.EMI_FREQUENCY as EMI_FREQUENCY,
	(cd.TOTAL_DUE + cd.PRE_EMI) AS EMI_OVERDUE_AMOUNT,
	NULL AS ROID,
	NULL AS RO_NAME,
	NULL AS NEXT_DUE_DATE, --- need to ask
	NULL AS BOM_BKT_LM,
	NULL AS ALLOCATION_LLM,
	NULL AS ALLOCATION,
	NULL AS ALLOCATION_DATE,
	NULL AS DAY1_ALLOCATION,
	NULL AS ALLOCATION_CHANNEL,
	NULL AS AGENCY_CODE,
	NULL AS NPA_STAGEID_NEW
	FROM DISHA_L2_CURATED.BASE_HARDCODE.COLL_DUELIST cd
	LEFT JOIN DISHA_L2_CURATED.BASE_HARDCODE.CUSTOMER_ROLE_FLEXCUBE crf ON cd.LOAN_NO = crf.LOAN_NO
	left join (select LOAN_NO, LAST_DAY(EXTRACTED_DATE) AS month_end,
    FIRST_VALUE(DPD) OVER (
           PARTITION BY LOAN_NO, YEAR(EXTRACTED_DATE), MONTH(EXTRACTED_DATE) 
           ORDER BY EXTRACTED_DATE DESC
       ) AS op_dpd from DISHA_L2_CURATED.BASE_HARDCODE.COLL_DUELIST) ld ON cd.LOAN_NO = ld.loan_NO
left join DISHA_L2_CURATED.BASE_HARDCODE.loan_account_mart lam ON cd.LOAN_NO = lam.LOAN_ACCOUNT_NUMBER  
	where cd.dpd > 0 and OP_DPD != 0
	
